<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on KMS Dev log</title>
    <link>https://thouy.github.io/posts/javascript/</link>
    <description>Recent content in Javascript on KMS Dev log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Jan 2023 15:48:59 +0900</lastBuildDate><atom:link href="https://thouy.github.io/posts/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Javascript] Hoisting (호이스팅)</title>
      <link>https://thouy.github.io/posts/javascript/hoisting/</link>
      <pubDate>Wed, 18 Jan 2023 15:48:59 +0900</pubDate>
      
      <guid>https://thouy.github.io/posts/javascript/hoisting/</guid>
      <description>
        
          
            호이스팅이란 Hoist는 사전적으로 무거운 물건 및 무언가를 기계 등을 이용하여 위로 끌어 올리는 것(lift)을 의미합니다. 자바스크립트에서 호이스팅은 자바스크립트 Parser가 변수나 함수를 끌어 올려 최상단에 배치하는 것을 말합니다.
실제로 코드가 상단으로 올라가는 것은 아닙니다. 자바스크립트 Parser가 내부적으로 최상단에 끌어 올려서 처리하게 되며, 이 때 메모리 상의 변화는 없습니다.
호이스팅 대상 자바스크립트는 선언 구문만 호이스팅 합니다. 때문에 변수 선언 없이 먼저 변수를 사용하게 되더라도 예외가 발생하지 않습니다. 다만 그 변수는 사용되는 시점에 자동으로 기본 초기화 상태 (var 선언의 경우 undefined)가 됩니다.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
